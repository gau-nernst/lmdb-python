from optparse import Option
from typing import Optional

class LmdbEnvironment:
    def create_env(self) -> int: ...
    def open_env(
        self, env_name: str, no_subdir: bool = False, read_only: bool = False
    ) -> int: ...

class LmdbTransaction:
    def begin_txn(self, env: LmdbEnvironment, read_only: bool = True) -> int: ...
    def commit_txn(self) -> int: ...

class LmdbDatabase:
    def open_dbi(self, txn: LmdbTransaction) -> int: ...

class LmdbValue:
    def __init__(self, data: Optional[bytes]): ...
    def to_bytes(self) -> Option[bytes]: ...

def put(
    key: LmdbValue, value: LmdbValue, txn: LmdbTransaction, dbi: LmdbDatabase
) -> int: ...
def get(
    key: LmdbValue, value: LmdbValue, txn: LmdbTransaction, dbi: LmdbDatabase
) -> int: ...
def delete(key: LmdbValue, txn: LmdbTransaction, dbi: LmdbDatabase) -> int: ...

name: Build wheels
on:
  push:
    paths:
      - .github/workflows/wheels.yaml
  workflow_dispatch:
    inputs:
      make_release:
        description: Publish a new release
        type: boolean
        default: false
      tag:
        description: Tag for the release

jobs:
  linux:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        platform: [manylinux, musllinux]
        arch: [x86_64, aarch64]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Set up QEMU for aarch64
        if: matrix.arch == 'aarch64'
        uses: docker/setup-qemu-action@v2
        with:
          platforms: arm64

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.12.1
        env:
          CIBW_ENVIRONMENT_LINUX: CFLAGS='-g0'  # remove debug symbols
          CIBW_BUILD_VERBOSITY: 1
          CIBW_BUILD: cp*-${{ matrix.platform }}*
          CIBW_ARCHS_LINUX: ${{ matrix.arch }}

          CIBW_TEST_REQUIRES: pytest
          CIBW_TEST_COMMAND: pytest -v {project}/tests
          CIBW_TEST_SKIP: cp*-musllinux_aarch64  # flock() is not available on GHA for this combination

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: ./wheelhouse/*.whl

  macos:
    runs-on: macos-latest
    strategy:
      fail-fast: false
      matrix:
        arch: [x86_64, arm64]
    env:
      CC: clang
      CXX: clang++
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.12.1
        env:
          CIBW_BUILD_VERBOSITY: 1
          CIBW_BUILD: cp*
          CIBW_ARCHS_MACOS: ${{ matrix.arch }}

          CIBW_TEST_REQUIRES: pytest
          CIBW_TEST_COMMAND: pytest -v {project}/tests

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: ./wheelhouse/*.whl

  windows:
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        arch: [AMD64, x86, ARM64]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.12.1
        env:
          CIBW_BUILD_VERBOSITY: 1
          CIBW_BUILD: cp*
          CIBW_ARCHS_WINDOWS: ${{ matrix.arch }}

          CIBW_TEST_REQUIRES: pytest
          CIBW_TEST_COMMAND: pytest -v {project}/tests

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: ./wheelhouse/*.whl

  publish_wheels:
    name: Publish wheels
    if: github.event.inputs.make_release == 'true'
    needs: [linux, macos, windows]
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: wheels
          path: wheelhouse
      - name: Create release
        run: gh release create ${{ github.event.inputs.tag }} ./wheelhouse/*.whl --generate-notes
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

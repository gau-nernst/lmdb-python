name: Build wheels
on:
  workflow_dispatch:
    inputs:
      make_release:
        description: Publish a new release
        type: boolean
        default: false

jobs:
  build_wheels:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python: ["37", "38", "39", "310"]
        include:
          # Linux
          - os: ubuntu-latest
            platform_id: manylinux_x86_64
          - os: ubuntu-latest
            platform_id: manylinux_aarch64
          
          # macOS
          - os: macos-latest
            python: "37"
            platform_id: macos_x86_64
          - os: macos-latest
            python: "38"
            platform_id: macos_universal2
          - os: macos-latest
            python: "39"
            platform_id: macos_universal2
          - os: macos-latest
            python: "310"
            platform_id: macos_universal2

          # Windows
          - os: windows-latest
            platform_id: win_amd64

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: recursive
      
      - name: Setup Python
        uses: actions/setup-python@v3

      - name: Set up QEMU on Linux
        if: runner.os == 'Linux'
        uses: docker/setup-qemu-action@v2
        with:
          platforms: arm64

      - name: Install cibuildwheel
        run: python -m pip install cibuildwheel

      - name: Set compiler to clang on macOS
        if: runner.os == 'macOS'
        run: |
          echo "CC=/usr/bin/clang" >> $GITHUB_ENV
          echo "CXX=/usr/bin/clang++" >> $GITHUB_ENV

      - name: Build wheels
        run: python -m cibuildwheel --output-dir wheelhouse
        env:
          CIBW_BUILD_VERBOSITY: 1

          CIBW_BUILD: cp${{ matrix.python }}-${{ matrix.platform_id }}
          CIBW_ARCHS: all

          CIBW_TEST_REQUIRES: pytest
          CIBW_TEST_COMMAND: pytest -v {project}/tests
          CIBW_TEST_SKIP: "*-macosx_universal2:arm64"
        
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: ./wheelhouse/*.whl

  publish_wheels:
    name: Publish wheels
    if: github.event.inputs.make_release == 'true'
    needs: build_wheels
    runs-on: ubuntu-latest
    steps:
      # - name: Checkout
      #   uses: actions/checkout@v3
      #   with:
      #     submodules: recursive
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: wheels
          path: wheelhouse
      - name: Create release
        run: gh release create v0.0.1 ./wheelhouse/*.whl --generate-notes
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

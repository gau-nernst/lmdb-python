name: Build wheels
on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      make_release:
        description: Publish a new release
        type: boolean
        default: false

jobs:
  build_wheels:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: recursive
      
      - name: Setup Python
        uses: actions/setup-python@v3

      - name: Set up QEMU on Linux
        if: runner.os == 'Linux'
        uses: docker/setup-qemu-action@v2
        with:
          platforms: arm64

      - name: Install cibuildwheel
        run: python -m pip install cibuildwheel

      - name: Set compiler to clang on macOS
        if: runner.os == 'macOS'
        run: |
          echo "CC=/usr/bin/clang" >> $GITHUB_ENV
          echo "CXX=/usr/bin/clang++" >> $GITHUB_ENV

      - name: Build wheels
        run: python -m cibuildwheel --output-dir wheelhouse
        env:
          CIBW_BUILD_VERBOSITY: 1

          # skip Python 3.6, PyPy, and musllinux
          # skip x86_64 builds on macOS for Python 3.8-3.10
          CIBW_SKIP: cp36-* pp* *-musllinux-* cp3{8,9,10}-macosx_x86_64

          # only build universal2 on macOS
          # universal2 is not available on Python 3.7
          CIBW_ARCHS_MACOS: x86_64 universal2
          CIBW_TEST_SKIP: "*-macosx_universal2:arm64"

          # only build 64-bit x86 on Windows
          CIBW_ARCHS_WINDOWS: AMD64

          # only build 64-bit x86 and ARM on Linux
          CIBW_ARCHS_LINUX: x86_64 aarch64

          CIBW_TEST_REQUIRES: pytest
          CIBW_TEST_COMMAND: pytest -v {project}/tests
        
      - name: Save wheels
        uses: actions/upload-artifact@v2
        with:
          path: ./wheelhouse/*.whl
